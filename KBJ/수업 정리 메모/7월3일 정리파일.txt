★★
생성자
- 인스턴트 생성시 호출되는 '인스턴스 초기화 메서드'
- 메서드와 차이 => 객체를 생성할때 딱 한번만 생성된다.

default(package)
같은 패키지만 접근을 허용합니다.
proteced
상속받은 클래스들이 사용할 수 있습니다.


★★★
static
클래스 => 도면, 즉 객체화 됐을때 메서드나 필드를 사용할 수 있다.
이때 인스턴스를 만들지 않아도 static을 사용한 클래스들의 메서드나 필드를 사용 할 수 있도록 하는 기능을 한다.
static메서드에서는 this를 사용할 수 없다.(인스턴스가 만들어지지 않았을 경우라서 사용할 수 없다.)
=> static 한 영역(메서드)에서 인스턴스가 만들어질때 만들어지는 static하지 않은 메서드나 필드를 사용 할 수 없다.
=> 반대로 static하지 않은 메서드는 인스턴스가 만들어졌을때 만들어지므로 실행하자마자 만들어지는 static영역에 있는 메서드, 필드를 사용할 수 있다.
static영역은 값이 공유된다(=> 인스턴스들, 인스턴스를 만들기전 모두)

★★★
상속과 생성자
부모 변수 = new 자식();
일때 부모는 자식의 변수, 메서드를 알 수 없기 때문에 자식의 메서드를 쓸 수 없다.
 단 자식클래스에서 오버라이딩 된 메서드를 쓸 때는 자식의 필드를 생성할 수 있다.

★★★
형변환
업캐스팅 (항상 부모가 자식보다 큰 그릇)
 Parent pc = new Child(); ->형변환(묵시적) => 자식클래스가 부모클래스 타입으로 변환된것
(작은 그릇에 있는걸 큰그릇에 담을때)

 ((Child)pc.printChildMethod) 명시적 형변환
(큰 그릇에 있는 걸 작은 그릇에 담을때)

=>자식이 확장해 놓은 자원들을 사용하고 싶을때 (명시적)형변환을 한다.

this, super, 